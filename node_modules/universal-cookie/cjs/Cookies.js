"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var cookie = _interopRequireWildcard(require("cookie"));
var _utils = require("./utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var Cookies = exports["default"] = /*#__PURE__*/function () {
  function Cookies(cookies) {
    var _this = this;
    var defaultSetOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    _classCallCheck(this, Cookies);
    this.changeListeners = [];
    this.HAS_DOCUMENT_COOKIE = false;
    this.update = function () {
      if (!_this.HAS_DOCUMENT_COOKIE) {
        return;
      }
      var previousCookies = _this.cookies;
      _this.cookies = cookie.parse(document.cookie);
      _this._checkChanges(previousCookies);
    };
    var domCookies = typeof document === 'undefined' ? '' : document.cookie;
    this.cookies = (0, _utils.parseCookies)(cookies || domCookies);
    this.defaultSetOptions = defaultSetOptions;
    this.HAS_DOCUMENT_COOKIE = (0, _utils.hasDocumentCookie)();
  }
  _createClass(Cookies, [{
    key: "_emitChange",
    value: function _emitChange(params) {
      for (var i = 0; i < this.changeListeners.length; ++i) {
        this.changeListeners[i](params);
      }
    }
  }, {
    key: "_checkChanges",
    value: function _checkChanges(previousCookies) {
      var _this2 = this;
      var names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));
      names.forEach(function (name) {
        if (previousCookies[name] !== _this2.cookies[name]) {
          _this2._emitChange({
            name: name,
            value: (0, _utils.readCookie)(_this2.cookies[name])
          });
        }
      });
    }
  }, {
    key: "_startPolling",
    value: function _startPolling() {
      this.pollingInterval = setInterval(this.update, 300);
    }
  }, {
    key: "_stopPolling",
    value: function _stopPolling() {
      if (this.pollingInterval) {
        clearInterval(this.pollingInterval);
      }
    }
  }, {
    key: "get",
    value: function get(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (!options.doNotUpdate) {
        this.update();
      }
      return (0, _utils.readCookie)(this.cookies[name], options);
    }
  }, {
    key: "getAll",
    value: function getAll() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (!options.doNotUpdate) {
        this.update();
      }
      var result = {};
      for (var name in this.cookies) {
        result[name] = (0, _utils.readCookie)(this.cookies[name], options);
      }
      return result;
    }
  }, {
    key: "set",
    value: function set(name, value, options) {
      if (options) {
        options = Object.assign(Object.assign({}, this.defaultSetOptions), options);
      } else {
        options = this.defaultSetOptions;
      }
      var stringValue = typeof value === 'string' ? value : JSON.stringify(value);
      this.cookies = Object.assign(Object.assign({}, this.cookies), _defineProperty({}, name, stringValue));
      if (this.HAS_DOCUMENT_COOKIE) {
        document.cookie = cookie.serialize(name, stringValue, options);
      }
      this._emitChange({
        name: name,
        value: value,
        options: options
      });
    }
  }, {
    key: "remove",
    value: function remove(name, options) {
      var finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {
        expires: new Date(1970, 1, 1, 0, 0, 1),
        maxAge: 0
      });
      this.cookies = Object.assign({}, this.cookies);
      delete this.cookies[name];
      if (this.HAS_DOCUMENT_COOKIE) {
        document.cookie = cookie.serialize(name, '', finalOptions);
      }
      this._emitChange({
        name: name,
        value: undefined,
        options: options
      });
    }
  }, {
    key: "addChangeListener",
    value: function addChangeListener(callback) {
      this.changeListeners.push(callback);
      if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {
        if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' && 'cookieStore' in window) {
          window.cookieStore.addEventListener('change', this.update);
        } else {
          this._startPolling();
        }
      }
    }
  }, {
    key: "removeChangeListener",
    value: function removeChangeListener(callback) {
      var idx = this.changeListeners.indexOf(callback);
      if (idx >= 0) {
        this.changeListeners.splice(idx, 1);
      }
      if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {
        if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' && 'cookieStore' in window) {
          window.cookieStore.removeEventListener('change', this.update);
        } else {
          this._stopPolling();
        }
      }
    }
  }]);
  return Cookies;
}();
module.exports = exports.default;