{"ast":null,"code":"var _jsxFileName = \"/Users/anthonytabet/Desktop/Projects/FirstNodeReactProject/client/src/components/ServerListNames.js\",\n  _s = $RefreshSig$();\n// ServerListNames.js\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\nconst ServerListNames = ({\n  selectedServer,\n  setSelectedServer\n}) => {\n  _s();\n  const [serverList, setServerList] = useState([]);\n  useEffect(() => {\n    const fetchDataOnLoad = async () => {\n      try {\n        const response = await fetch(apiUrl + \"/servers\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setServerList(data);\n        }\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchDataOnLoad();\n  }, []);\n  const handleServerClick = server => {\n    setSelectedServer(server);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light text-dark dropdown-toggle me-1 border border-dark\",\n      type: \"button\",\n      \"data-bs-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\",\n      style: {\n        minWidth: \"100px\",\n        maxWidth: \"100px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      },\n      children: selectedServer || \"Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenuButton\",\n      children: serverList.map(server => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#\",\n          onClick: () => handleServerClick(server),\n          children: server\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, server, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ServerListNames, \"xcwoQppT5UDu79YZeDw+Ubre19A=\");\n_c = ServerListNames;\nexport default ServerListNames;\nvar _c;\n$RefreshReg$(_c, \"ServerListNames\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiUrl","process","env","REACT_APP_API_URL","ServerListNames","selectedServer","setSelectedServer","_s","serverList","setServerList","fetchDataOnLoad","response","fetch","method","headers","ok","data","json","error","console","message","handleServerClick","server","className","children","type","style","minWidth","maxWidth","overflow","textOverflow","fileName","_jsxFileName","lineNumber","columnNumber","map","href","onClick","_c","$RefreshReg$"],"sources":["/Users/anthonytabet/Desktop/Projects/FirstNodeReactProject/client/src/components/ServerListNames.js"],"sourcesContent":["// ServerListNames.js\nimport React, { useState, useEffect } from \"react\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nconst ServerListNames = ({ selectedServer, setSelectedServer }) => {\n  const [serverList, setServerList] = useState([]);\n\n  useEffect(() => {\n    const fetchDataOnLoad = async () => {\n      try {\n        const response = await fetch(apiUrl + \"/servers\", {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setServerList(data);\n        }\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n\n    fetchDataOnLoad();\n  }, []);\n\n  const handleServerClick = (server) => {\n    setSelectedServer(server);\n  };\n\n  return (\n    <div className=\"btn-group\">\n      <button\n        className=\"btn btn-light text-dark dropdown-toggle me-1 border border-dark\"\n        type=\"button\"\n        data-bs-toggle=\"dropdown\"\n        aria-expanded=\"false\"\n        style={{ minWidth: \"100px\", maxWidth: \"100px\", overflow: \"hidden\", textOverflow: \"ellipsis\" }}\n      >\n        {selectedServer || \"Server\"}\n      </button>\n      <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        {serverList.map((server) => (\n          <li key={server}>\n            <a\n              className=\"dropdown-item\"\n              href=\"#\"\n              onClick={() => handleServerClick(server)}\n            >\n              {server}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ServerListNames;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE5C,MAAMC,eAAe,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,MAAM,GAAG,UAAU,EAAE;UAChDa,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAChD,CAAC,CAAC;QACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCR,aAAa,CAACO,IAAI,CAAC;QACrB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxC;IACF,CAAC;IAEDV,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,iBAAiB,GAAIC,MAAM,IAAK;IACpChB,iBAAiB,CAACgB,MAAM,CAAC;EAC3B,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzB,OAAA;MACEwB,SAAS,EAAC,iEAAiE;MAC3EE,IAAI,EAAC,QAAQ;MACb,kBAAe,UAAU;MACzB,iBAAc,OAAO;MACrBC,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,QAAQ,EAAE,OAAO;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAW,CAAE;MAAAN,QAAA,EAE7FnB,cAAc,IAAI;IAAQ;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACTnC,OAAA;MAAIwB,SAAS,EAAC,eAAe;MAAC,mBAAgB,oBAAoB;MAAAC,QAAA,EAC/DhB,UAAU,CAAC2B,GAAG,CAAEb,MAAM,iBACrBvB,OAAA;QAAAyB,QAAA,eACEzB,OAAA;UACEwB,SAAS,EAAC,eAAe;UACzBa,IAAI,EAAC,GAAG;UACRC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACC,MAAM,CAAE;UAAAE,QAAA,EAExCF;QAAM;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GAPGZ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApDIH,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAsDrB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}